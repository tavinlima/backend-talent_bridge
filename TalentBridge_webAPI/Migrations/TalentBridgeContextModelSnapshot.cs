// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalentBridge_webAPI.data;

#nullable disable

namespace talentbridge_webAPI.Migrations
{
    [DbContext(typeof(TalentBridgeContext))]
    partial class TalentBridgeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("talentbridge_webAPI.Domains.Aplicaco", b =>
                {
                    b.Property<int>("IdAplicacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAplicacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAplicacao"));

                    b.Property<string>("Avaliacao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avaliacao");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateTime>("DataCandidatura")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dataCandidatura");

                    b.Property<string>("Feedback")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("feedback");

                    b.Property<int?>("IdVaga")
                        .HasColumnType("int")
                        .HasColumnName("idVaga");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Situacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("situacao");

                    b.HasKey("IdAplicacao")
                        .HasName("PK__Aplicaco__6C5677E8D4683B83");

                    b.HasIndex("Cpf");

                    b.HasIndex("IdVaga");

                    b.ToTable("Aplicacoes");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Candidato", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimento");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Cpf")
                        .HasName("PK__Candidat__C1F8973065306718");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Candidato", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Certificacao", b =>
                {
                    b.Property<int>("IdCertificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCertificacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCertificacao"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateOnly?>("DataConclusao")
                        .HasColumnType("date")
                        .HasColumnName("dataConclusao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdCertificacao")
                        .HasName("PK__Certific__23C2554A4853CEE3");

                    b.HasIndex("Cpf");

                    b.ToTable("Certificacao", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Contato", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idContato");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContato"));

                    b.Property<string>("Numero")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("numero");

                    b.Property<string>("TipoContato")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoContato");

                    b.HasKey("IdContato")
                        .HasName("PK__Contato__278E896D75450ADA");

                    b.ToTable("Contato", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Empresa", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("CNPJ")
                        .IsFixedLength();

                    b.Property<decimal?>("Avaliacao")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("avaliacao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Cnpj")
                        .HasName("PK__Empresa__AA57D6B56CD920C5");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEndereco");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("cep")
                        .IsFixedLength();

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("estado")
                        .IsFixedLength();

                    b.Property<string>("Logradouro")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numero");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pais");

                    b.Property<string>("TipoEndereco")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipoEndereco");

                    b.HasKey("IdEndereco")
                        .HasName("PK__Endereco__E45B8B2794F1B033");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Escolaridade", b =>
                {
                    b.Property<int>("IdEscolaridade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEscolaridade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscolaridade"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateOnly?>("DataConclusao")
                        .HasColumnType("date")
                        .HasColumnName("dataConclusao");

                    b.Property<DateOnly?>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("dataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdEscolaridade")
                        .HasName("PK__Escolari__074B135CC6345AC2");

                    b.HasIndex("Cpf");

                    b.ToTable("Escolaridade", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Experiencium", b =>
                {
                    b.Property<int>("IdExperiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idExperiencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExperiencia"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateOnly?>("DataConclusao")
                        .HasColumnType("date")
                        .HasColumnName("dataConclusao");

                    b.Property<DateOnly?>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("dataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdExperiencia")
                        .HasName("PK__Experien__77DCF294397262AE");

                    b.HasIndex("Cpf");

                    b.ToTable("Experiencia");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Idioma", b =>
                {
                    b.Property<int>("IdIdioma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idIdioma");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIdioma"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<string>("Fluencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fluencia");

                    b.Property<string>("Idioma1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idioma");

                    b.HasKey("IdIdioma")
                        .HasName("PK__Idioma__A96571FC1F4237B4");

                    b.HasIndex("Cpf");

                    b.ToTable("Idioma", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Projeto", b =>
                {
                    b.Property<int>("IdProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProjeto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjeto"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<DateOnly?>("DataConclusao")
                        .HasColumnType("date")
                        .HasColumnName("dataConclusao");

                    b.Property<DateOnly?>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("dataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdProjeto")
                        .HasName("PK__Projeto__8FCCED7646A3D7D3");

                    b.HasIndex("Cpf");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Requisito", b =>
                {
                    b.Property<int>("IdRequisitos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRequisitos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRequisitos"));

                    b.Property<int?>("IdVaga")
                        .HasColumnType("int")
                        .HasColumnName("idVaga");

                    b.Property<string>("Requisito1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("requisito");

                    b.HasKey("IdRequisitos")
                        .HasName("PK__Requisit__894FA0C7D507D6A1");

                    b.HasIndex("IdVaga");

                    b.ToTable("Requisitos");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Skill", b =>
                {
                    b.Property<int>("IdSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSkill");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSkill"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("CPF")
                        .IsFixedLength();

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdSkill")
                        .HasName("PK__Skills__C4CE4D6EF42652D1");

                    b.HasIndex("Cpf");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fotoPerfil");

                    b.Property<int?>("IdContato")
                        .HasColumnType("int")
                        .HasColumnName("idContato");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("idEndereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A64B26A69B");

                    b.HasIndex("IdContato");

                    b.HasIndex("IdEndereco");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuario__AB6E61646AB13C7F")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Vaga", b =>
                {
                    b.Property<int>("IdVaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVaga");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVaga"));

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("CNPJ")
                        .IsFixedLength();

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit")
                        .HasColumnName("disponivel");

                    b.Property<string>("ModeloTrabalho")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modeloTrabalho");

                    b.Property<string>("Senioridade")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("senioridade");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdVaga")
                        .HasName("PK__Vagas__02E6F4AAE1B89A90");

                    b.HasIndex("Cnpj");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Aplicaco", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Aplicacos")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Aplicacoes__CPF__70DDC3D8");

                    b.HasOne("talentbridge_webAPI.Domains.Vaga", "IdVagaNavigation")
                        .WithMany("Aplicacos")
                        .HasForeignKey("IdVaga")
                        .HasConstraintName("FK__Aplicacoe__idVag__6FE99F9F");

                    b.Navigation("CpfNavigation");

                    b.Navigation("IdVagaNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Candidato", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Candidato__idUsu__52593CB8");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Certificacao", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Certificacaos")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Certificaca__CPF__6477ECF3");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Empresa", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Empresa__idUsuar__5535A963");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Escolaridade", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Escolaridades")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Escolaridad__CPF__59063A47");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Experiencium", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Experiencia")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Experiencia__CPF__5BE2A6F2");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Idioma", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Idiomas")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Idioma__CPF__6754599E");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Projeto", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Projeto__CPF__619B8048");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Requisito", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Vaga", "IdVagaNavigation")
                        .WithMany("Requisitos")
                        .HasForeignKey("IdVaga")
                        .HasConstraintName("FK__Requisito__idVag__6D0D32F4");

                    b.Navigation("IdVagaNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Skill", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Candidato", "CpfNavigation")
                        .WithMany("Skills")
                        .HasForeignKey("Cpf")
                        .HasConstraintName("FK__Skills__CPF__5EBF139D");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Usuario", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Contato", "IdContatoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdContato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Usuario__idConta__4F7CD00D");

                    b.HasOne("talentbridge_webAPI.Domains.Endereco", "IdEnderecoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Usuario__idEnder__4E88ABD4");

                    b.Navigation("IdContatoNavigation");

                    b.Navigation("IdEnderecoNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Vaga", b =>
                {
                    b.HasOne("talentbridge_webAPI.Domains.Empresa", "CnpjNavigation")
                        .WithMany("Vagas")
                        .HasForeignKey("Cnpj")
                        .HasConstraintName("FK__Vagas__CNPJ__6A30C649");

                    b.Navigation("CnpjNavigation");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Candidato", b =>
                {
                    b.Navigation("Aplicacos");

                    b.Navigation("Certificacaos");

                    b.Navigation("Escolaridades");

                    b.Navigation("Experiencia");

                    b.Navigation("Idiomas");

                    b.Navigation("Projetos");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Contato", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Empresa", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Endereco", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Usuario", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("talentbridge_webAPI.Domains.Vaga", b =>
                {
                    b.Navigation("Aplicacos");

                    b.Navigation("Requisitos");
                });
#pragma warning restore 612, 618
        }
    }
}
